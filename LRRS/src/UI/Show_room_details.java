/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Databse.Database;
import Enums.RoomType;
import Enums.Status;
import Model.User;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Hiruni CH
 */
public class Show_room_details extends javax.swing.JFrame {

    /**
     * Creates new form Show_room_details
     */
    
    private User user;
    private String roomID;
    private RoomType roomType;
    private Date dateStart,dateEnd;
    private String type;
    
    private static int reservationID;
    
 
    
    public Show_room_details() {
        initComponents();
        this.setResizable(false); 
        this.setLocationRelativeTo(null);
    }
    
    
    public static void setReservationID(int reservationID){
        Show_room_details.reservationID = reservationID;
    }
    
    public Show_room_details(User user,String roomID,RoomType roomType,Date dateStart,Date dateEnd,String type) {
        initComponents();
        this.setResizable(false); 
        this.setLocationRelativeTo(null);
        this.user = user;
        this.roomID = roomID;
        this.roomType = roomType;
        this.dateStart = dateStart;
        this.dateEnd = dateEnd;
        this.type = type;
        String[] equipments = {"Projectors","AC","Tables","Chairs","Project Borad","White Borad"};
        
     
       DefaultListModel model = new DefaultListModel();
       
       for(int i=0;i<equipments.length;i++){
           model.addElement(equipments[i]);
       }
        
        
       list_equipment.setModel(model);
        
       
       String roomTypeStr;
        switch (roomType) {
                    case LECTURE_ROOM:
                        roomTypeStr = "Lecture Room";
                      
                        break;
                    case MEETING_ROOM:
                        roomTypeStr = "Meeting Room";
                      
                        break;
                    default:
                        roomTypeStr = "Study Area";
                       
                        break;
                }
        
        txt_hall_name.setText(roomTypeStr);
        txt_code.setText(roomID);
        
        txt_hall_name.setEditable(false);
        txt_code.setEditable(false);
        
       
        
        
    }
    
      private void showError(String msg){
        JOptionPane.showMessageDialog(this, msg, "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_code = new javax.swing.JTextField();
        txt_hall_name = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_equipment = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        btn_reserve = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(12, 12, 38));

        txt_code.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txt_code.setText("Code");
        txt_code.setBorder(null);

        txt_hall_name.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txt_hall_name.setText("Hall Name");
        txt_hall_name.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(txt_hall_name, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_code, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hall_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        list_equipment.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        list_equipment.setToolTipText("");
        jScrollPane1.setViewportView(list_equipment);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Available Equipment");

        btn_reserve.setBackground(new java.awt.Color(0, 100, 0));
        btn_reserve.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btn_reserve.setForeground(java.awt.Color.white);
        btn_reserve.setText("Reserve");
        btn_reserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reserveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_reserve)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_reserve)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_reserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reserveActionPerformed
        // TODO add your handling code here:
        
        
        Connection connection = Database.openConnection();
        
        
        
        if(type.equals("UPDATE")){
            try {
            SimpleDateFormat  formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            PreparedStatement statement =  connection.prepareStatement("UPDATE reservation SET  Date_time_start=?, Date_time_end=?, Room_id=? WHERE Reservation_number=?");
            
            statement.setString(1, formatter.format(dateStart));
            statement.setString(2, formatter.format(dateEnd));
            statement.setString(3, roomID);
            
            statement.setString(4,Integer.toString(reservationID));
           
            
            int res = statement.executeUpdate();
            if(res == 1){
                JOptionPane.showMessageDialog(this, "Request success", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                Reservation.setRowCountZero();
                this.dispose();
            }else {
                showError("Reservation Failed");
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(Show_room_details.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        }else {
             try {
            SimpleDateFormat  formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            PreparedStatement statement =  connection.prepareStatement("INSERT INTO reservation (Status,Date_time_start,Comment,Reserved_person_id,Non_academic_id,Room_id,Date_time_end) VALUES(?,?,?,?,?,?,?)");
            statement.setString(1, Status.PENDING.toString());
            statement.setString(2, formatter.format(dateStart));
            statement.setString(3, "");
            statement.setString(4, user.getId_number());
            
            statement.setString(5, "");
            statement.setString(6, roomID);
            statement.setString(7, formatter.format(dateEnd));
            
            int res = statement.executeUpdate();
            if(res == 1){
                JOptionPane.showMessageDialog(this, "Request success", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                Reservation.setRowCountZero();
                this.dispose();
            }else {
                showError("Reservation Failed");
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(Show_room_details.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
    }//GEN-LAST:event_btn_reserveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Show_room_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Show_room_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Show_room_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Show_room_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Show_room_details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_reserve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list_equipment;
    private javax.swing.JTextField txt_code;
    private javax.swing.JTextField txt_hall_name;
    // End of variables declaration//GEN-END:variables
}
